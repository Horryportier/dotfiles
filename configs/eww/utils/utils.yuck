(include "./utils/buttons.yuck")


(defpoll date_jp :interval "1h"
  `date +"「%Y」・「%m ・%d」"`)
(defpoll time_jp :interval "1s"
  `date +"「%H・%M ・%S」"`)

(defpoll time :interval "1s"
  `date`)

(defpoll notes :interval "30s"
  `cat ~/paradox.md`)

(defpoll watcher :interval "30m"
  `Watcher eune HorryPortier6 -s -r`)



(defpoll keys :interval "1s"
  `setxkbmap -print | grep xkb_symbols | grep -o -P '(?<=pc).*(?=inet)' | cut -d "+" -f 2`)

;get volume from music player
(defpoll volume_get :interval "5s"
  `uta -v`)

(defpoll progress :interval "1s"
  `uta progress`)

(defpoll is_paused :interval "1s"
  `uta is_paused`)

(defpoll music_name :interval "3s"
  `uta --print`)


(defwidget metric [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)
    ))


(defwidget img_box [path ?width ?height ?class]
  (box :class class
    (image :path "assets/hell_paradise.jpg"
           :image-width width
           :image-height height
      )
    )
  )

(defwidget  note []
  (box :class "notes-box"
    (box :class "notes"
      (button :onclick "kitty nvim ~/paradox.md"
        (label :text notes :wrap true )
        )
      )
    )

  )

(defwidget  watch []
  (box :class "notes-box"
    (box :class "notes"
      (button :onclick "kitty nvim ~/paradox.md"
        (label :text watcher :wrap true )
        )
      )
    )

  )

(defwidget time_box []
  (box :class "time-box"
       :orientation "v"
       :space-evenly false
       :spacing 20
    (box :class "time"
         :space-evenly false
         :halign "end"
         :valign "start"
      time_jp)
    (box :class "time"
         :space-evenly false
         :halign "end"
         :valign "start"
      date_jp)
    )
  )

(defwidget keys_box []
  (box :class "keys-box"
    (box :class "keys"
         :space-evenly false
         :halign "end"
         :valign "start"
      (button :onclick "./scripts/toggle_keys.sh ${keys}"
        (label :text "keys: ${keys}")
        )
      )
    )
  )

(defwidget music_player []
  (box :class "player"
       :halign "center"
       :spacing 4
       :space-evenly false
       :orientation "v"
    (box "_______________________")
    (label :text "${music_name}" :limit-width 30 :wrap true )
    (box
      :space-evenly false
      :orientation "h"
      :halign "center"
      (button_img :class "btn"
                  :cmd "uta 'https://www.youtube.com/playlist?list=PL3AyWHvr_UThgm3gIBroTMRKEhV5zrQEl' --start"
                  :path "./assets/yt.svg"
                  :size 20)
      (button_img :class "btn"
                  :cmd "uta ~/Music/poggers_stuff_playlist --start"
                  :path "./assets/play.png"
                  :size 20)

      (metric :label "" :value volume_get :onchange "uta -v {}")
      (button_img :calss "btn"
                  :cmd "uta -r"
                  :path "./assets/rand.png"
                  :size 20)
      (button_img :calss "btn"
                  :cmd "uta -k"
                  :path "./assets/kill.png"
                  :size 20)
      )
    (box
      :class "btn"
      :halign "center"
      :spacing 4
      :orientation "h"
      (button_img :calss "btn"
                  :cmd "uta -p"
                  :path "./assets/prev.png"
                  :size 20)
      (button_img :calss "btn"
                  :cmd "uta -t"
                  :path "./assets/play.png"
                  :size 20)
      (button_img :calss "btn"
                  :cmd "uta -n"
                  :path "./assets/next.png"
                  :size 20)
      )
    ;(box (label :text is_paused))
    (box
      :halign "center"
      (metric :label "<->" :value progress :onchange "uta -s {}" )
      )
    (box "_______________________")
    )
  )
